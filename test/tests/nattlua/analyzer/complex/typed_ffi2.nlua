ยง _G.OLD_FFI = false

local function get_cdata<|anon_cdef: string, ...: ...any|>
	return TCData<|ffi.get_type<|anon_cdef|>, ...|>
end

local function get_ctype<|anon_cdef: string, ...: ...any|>
	return TCType<|ffi.get_type<|anon_cdef, ...|>|>
end

attest.equal<|get_cdata<|"struct {int i;}"|>.i, number|>
attest.equal<|get_cdata<|"struct {int i;}[1]"|>[0].i, number|>
attest.equal<|get_cdata<|"struct {int i;}*"|>[0].i, number|>
attest.equal<|get_cdata<|"struct {int i;}*"|>[14].i, number|>
attest.equal<|tonumber(get_cdata<|"int"|>), number|>

do
	attest.expect_diagnostic<|"error", "subset"|>
	attest.equal<|tonumber(get_ctype<|"int"|>), number | nil|>
end

attest.subset_of<|get_cdata<|"int[1]"|>, get_cdata<|"int*"|>|>
attest.equal<|tostring(get_cdata<|"int[1]"|>), "cdata<{ [0] = number }>"|>
attest.equal<|tostring(get_cdata<|"int[2]"|>), "cdata<{ [0..1] = number }>"|>
attest.equal<|(get_cdata<|"int (*)(int)"|>)(1), get_cdata<|"int"|>|>
attest.equal<|(get_cdata<|"int (*)()"|>)(), get_cdata<|"int"|>|>
attest.equal<|(get_cdata<|"void (*)()"|>)(), get_cdata<|"void"|>|>

do
	local x = get_cdata<|"void"|>
	attest.expect_diagnostic<|"error", "not callable"|>
	x()
end

do
	local ct = get_ctype<|[[struct {
		uint32_t foo;
		uint8_t uhoh;
		uint64_t bar1;
	}]]|>
	local cd = ct()
end

do
	local ct = get_ctype<|"$*", get_ctype<|"int"|>|>
	attest.equal<|ct, get_ctype<|"int *"|>|>
end

do
	local cd = get_cdata<|"struct {int i;}", 1337|>
	attest.equal<|cd.i, 1337|>
end

do
	local cd = get_cdata<|"struct {int a; int b; int c;}", 1, 2, 3|>
	attest.equal<|cd.a, 1|>
	attest.equal<|cd.b, 2|>
	attest.equal<|cd.c, 3|>
end

do
	local ffi = require("ffi")
	local x = get_ctype("struct { int foo; }[1]")
	x = x({{foo = 1}})
	attest.equal(x[0].foo, 1)
end

do
	local x = get_cdata("struct { int foo; }[2]", {{foo = 1}, {foo = 2}})
	attest.equal(x[0].foo, 1)
	attest.equal(x[1].foo, 2)
end

do
	attest.expect_diagnostic<|"error", "too many initializers"|>
	local x = get_cdata("struct { int foo; }[1]", {{foo = 1}, {foo = 2}})
	attest.equal(x[0].foo, 1)
	attest.equal(x[1].foo, 2)
end

ยง _G.OLD_FFI = true
