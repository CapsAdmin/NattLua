function math.round(num: ref number, idp: ref (nil | number))
	if idp and idp > 0 then
		local mult = 10 ^ idp
		return math.floor(num * mult + 0.5) / mult
	end

	return math.floor(num + 0.5)
end

do -- by Python1320
	local dd = 60 * 60 * 24
	local hh = 60 * 60
	local mm = 60

	function os.datetable(a: ref number)
		local negative = false

		if a < 0 then
			negative = true
			a = a * -1
		end

		local f, s, m, h, d
		f = a - math.floor(a)
		f = math.round(f * 10) * 0.1
		a = math.floor(a)
		d = math.floor(a / dd)
		a = a - d * dd
		h = math.floor(a / hh)
		a = a - h * hh
		m = math.floor(a / mm)
		a = a - m * mm
		s = a
		return {f = f, sec = s, min = m, hour = h, day = d, n = negative}
	end
end

do -- by Python1320
	local conjunction = " and"
	local conjunction2 = ","

	function os.prettydate(
		t: ref {
			f = number,
			sec = number,
			min = number,
			hour = number,
			day = number,
			n = boolean,
		},
		just_time: ref boolean
	)
		if just_time then t.n = nil end

		local tbl = {}

		if t.day ~= 0 then
			table.insert(tbl, t.day .. " day" .. (t.day == 1 and "" or "s"))
		end

		local lastand

		if t.hour ~= 0 then
			if #tbl > 0 then
				lastand = table.insert(tbl, conjunction)
				table.insert(tbl, " ")
			end

			table.insert(tbl, t.hour .. " hour" .. (t.hour == 1 and "" or "s"))
		end

		if t.min ~= 0 then
			if #tbl > 0 then
				lastand = table.insert(tbl, conjunction)
				table.insert(tbl, " ")
			end

			table.insert(tbl, t.min .. " minute" .. (t.min == 1 and "" or "s"))
		end

		if t.sec ~= 0 or #tbl == 0 then
			if #tbl > 0 then
				lastand = table.insert(tbl, conjunction)
				table.insert(tbl, " ")
			end

			table.insert(tbl, t.sec .. "." .. math.round((t.f or 0) * 10) .. " seconds")
		end

		if t.n then table.insert(tbl, " in the past") end

		for k, v in pairs(tbl) do
			if v == conjunction and k ~= lastand then tbl[k] = conjunction2 end
		end

		return table.concat(tbl, "")
	end
end

local d = os.datetable(10000000)
attest.equal(d.n, false)
local x = os.prettydate(d, true)
attest.equal(d.n, nil)
attest.equal(x, "115 days, 17 hours, 46 minutes, 40.0 seconds")
