--PwLAIN_LUA
if LuaVersion() ~= "LuaJIT" then return end

local undef = nil
local type assert = attest.truthy
local type pcall = attest.pcall
local ffi = require("ffi")
local bit = require("nattlua.other.bit")
local tobit, bnot, bswap = bit.tobit, bit.bnot, bit.bswap
local band, bor, bxor = bit.band, bit.bor, bit.bxor
local shl, shr, sar = bit.lshift, bit.rshift, bit.arshift
local rol, ror = bit.rol, bit.ror
ffi.cdef[[
typedef enum { ZZI = -1 } ienum_t;
typedef enum { ZZU } uenum_t;
]]

do --- smoke tobit
	attest.equal(tobit(0xfedcba9876543210ll), 0x76543210)
	attest.equal(tobit(0xfedcba9876543210ull), 0x76543210)
end

do --- smoke band
	attest.equal(tostring(band(1ll, 1, 1ll, -1)), "1LL")

	if LuaJITVersion() ~= "tarantool" then
		attest.equal(tostring(band(1ll, 1, 1ull, -1)), "0ULL")
	end
end

do --- smoke shl
	attest.equal(shl(10ll, 2), 40)
	attest.equal(shl(10, 2ll), 40)
	attest.equal(shl(10ll, 2ll), 40)
end

do --- smoke tohex
	attest.equal(bit.tohex(0x123456789abcdef0LL), "123456789abcdef0")
end

do --- jit band/bor/bxor
	local a = 0x123456789abcdef0LL
	local y1, y2, y3, y4, y5, y6

	for i = 1, 2 do
		y1 = band(a, 0x000000005a5a5a5aLL)
		y2 = band(a, 0x5a5a5a5a00000000LL)
		y3 = band(a, 0xffffffff5a5a5a5aLL)
		y4 = band(a, 0x5a5a5a5affffffffLL)
		y5 = band(a, 0xffffffff00000000LL)
		y6 = band(a, 0x00000000ffffffffLL)
	end

	attest.equal(y1, 0x000000001a185a50LL)
	attest.equal(y2, 0x1210525800000000LL)
	attest.equal(y3, 0x123456781a185a50LL)
	attest.equal(y4, 0x121052589abcdef0LL)
	attest.equal(y5, 0x1234567800000000LL)
	attest.equal(y6, 0x000000009abcdef0LL)

	for i = 1, 2 do
		y1 = bor(a, 0x000000005a5a5a5aLL)
		y2 = bor(a, 0x5a5a5a5a00000000LL)
		y3 = bor(a, 0xffffffff5a5a5a5aLL)
		y4 = bor(a, 0x5a5a5a5affffffffLL)
		y5 = bor(a, 0xffffffff00000000LL)
		y6 = bor(a, 0x00000000ffffffffLL)
	end

	attest.equal(y1, 0x12345678dafedefaLL)
	attest.equal(y2, 0x5a7e5e7a9abcdef0LL)
	attest.equal(y3, 0xffffffffdafedefaLL)
	attest.equal(y4, 0x5a7e5e7affffffffLL)
	attest.equal(y5, 0xffffffff9abcdef0LL)
	attest.equal(y6, 0x12345678ffffffffLL)

	for i = 1, 2 do
		y1 = bxor(a, 0x000000005a5a5a5aLL)
		y2 = bxor(a, 0x5a5a5a5a00000000LL)
		y3 = bxor(a, 0xffffffff5a5a5a5aLL)
		y4 = bxor(a, 0x5a5a5a5affffffffLL)
		y5 = bxor(a, 0xffffffff00000000LL)
		y6 = bxor(a, 0x00000000ffffffffLL)
	end

	attest.equal(y1, 0x12345678c0e684aaLL)
	attest.equal(y2, 0x486e0c229abcdef0LL)
	attest.equal(y3, 0xedcba987c0e684aaLL)
	attest.equal(y4, 0x486e0c226543210fLL)
	attest.equal(y5, 0xedcba9879abcdef0LL)
	attest.equal(y6, 0x123456786543210fLL)
end

do --- jit shift/xor
	local a, b = 0x123456789abcdef0LL, 0x31415926535898LL

	for i = 1, 2 do
		a = bxor(a, b)
		b = sar(b, 14) + shl(b, 50)
		a = a - b
		b = shl(b, 5) + sar(b, 59)
		b = bxor(a, b)
		b = b - shl(b, 13) - shr(b, 51)
	end

	attest.equal(b, 9107957474611207307LL)
end

do --- jit rotate/xor
	local a, b = 0x123456789abcdef0LL, 0x31415926535898LL

	for i = 1, 2 do
		a = bxor(a, b)
		b = rol(b, 14)
		a = a - b
		b = rol(b, 5)
		b = bxor(a, b)
		b = b - rol(b, 13)
	end

	attest.equal(b, 5144535131008703426LL)
end

do --- jit all ops
	local a, b = 0x123456789abcdef0LL, 0x31415926535898LL

	for i = 1, 2 do
		a = bxor(a, b)
		b = rol(b, a)
		a = a - b
		b = shr(b, a) + shl(b, bnot(a))
		b = bxor(a, b)
		b = b - bswap(b)
	end

	attest.equal(b, -2407874766225708255LL)
end
