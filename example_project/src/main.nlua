-- this will use some reflection api to track types from ffi.cdef
import_type<|"typed_ffi.nlua"|>

local fs = import("platforms/unix/filesystem.nlua")

local type function temp()
    analyzer:AnalyzeUnreachableCode()
end
temp()

print<|fs|> -- typesystem call, it won't be in build output

--[[
{
        "open" = function⦗nil | string, nil | string⦘: ⦗VoidPointer | nil⦘,
        "read" = function⦗VoidPointer | nil, number, number, VoidPointer | nil⦘: ⦗number⦘,
        "write" = function⦗VoidPointer | nil, number, number, VoidPointer | nil⦘: ⦗number⦘,
        "seek" = function⦗VoidPointer | nil, number, number⦘: ⦗number⦘,
        "tell" = function⦗VoidPointer | nil⦘: ⦗number⦘,
        "close" = function⦗VoidPointer | nil⦘: ⦗number⦘,
        "eof" = function⦗VoidPointer | nil⦘: ⦗number⦘,
        "setcustomattribute" = function⦗string, string⦘: ⦗nil | true, string⦘,
        "getcustomattribute" = function⦗string⦘: ⦗nil | string, string⦘,
        "watch" = function⦗string, { number = ⦗"access" | "attrib" | "close_nowrite" | "close_write" | "create" | "delete" | "delete_self" | "dont_follow" | "excl_unlink" | "ignored" | "isdir" | "mask_add" | "mask_create" | "modify" | "move_self" | "moved_from" | "moved_to" | "oneshot" | "onlydir" | "open" | "q_overflow" | "unmount"⦘ }⦘: ⦗nil | {
            "Read" = function⦗*self-table* | any⦘: ⦗⦘,
            "Remove" = function⦗*self-table* | any⦘: ⦗⦘
        }⦘,
        "get_files" = function⦗string⦘: ⦗nil | { }, string⦘,
        "get_files_recursive" = function⦗string, false | nil | true⦘: ⦗nil | {
            number ⊃ 0 = number | string ⊃ 2
        }, string | { number ⊃ undefined = {
            "path" = string,
            "error" = string
        } ⊃ undefined }⦘,
        "get_attributes" = function⦗string, false | nil | true⦘: ⦗nil | {
            "last_accessed" = nil | number,
            "last_changed" = nil | number,
            "last_modified" = nil | number,
            "type" = "directory" | "file",
            "size" = nil | number,
            "mode" = any,
            "links" = any
        }, string⦘,
        "get_size" = function⦗string, false | nil | true⦘: ⦗nil, string⦘,
        "get_type" = function⦗string⦘: ⦗"directory" | "file" | nil⦘,
        "copy" = function⦗string, string, false | nil | true⦘: ⦗nil, string⦘,
        "link" = function⦗string, string, false | nil | true⦘: ⦗nil | true, string⦘,
        "create_directory" = function⦗string⦘: ⦗nil | true, string⦘,
        "remove_file" = function⦗string⦘: ⦗nil | true, string⦘,
        "remove_directory" = function⦗string⦘: ⦗nil | true, string⦘,
        "set_current_directory" = function⦗string⦘: ⦗nil | true, string⦘,
        "get_current_directory" = function⦗⦘: ⦗string⦘
}
]]

for k,v in pairs(fs.get_files(".")) do
    print(k,v)
end