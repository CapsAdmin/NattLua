-- this will use some reflection api to track types from ffi.cdef
import_type<|"typed_ffi.nlua"|>

local fs = import("platforms/unix/filesystem.nlua")


-- typesystem call, won't be in build output
print<|fs|>

--[[
    {
        "open" = function⦗nil | string, nil | string⦘: ⦗nil | {
        "__index" = function⦗⦘: ⦗⦘,
        "__newindex" = function⦗⦘: ⦗⦘
}⦘,
        "read" = function⦗nil | {
        "__index" = function⦗⦘: ⦗⦘,
        "__newindex" = function⦗⦘: ⦗⦘
}, number, number, nil | {
        "__index" = function⦗⦘: ⦗⦘,
        "__newindex" = function⦗⦘: ⦗⦘
}⦘: ⦗number⦘,
        "write" = function⦗nil | {
        "__index" = function⦗⦘: ⦗⦘,
        "__newindex" = function⦗⦘: ⦗⦘
}, number, number, nil | {
        "__index" = function⦗⦘: ⦗⦘,
        "__newindex" = function⦗⦘: ⦗⦘
}⦘: ⦗number⦘,
        "seek" = function⦗nil | {
        "__index" = function⦗⦘: ⦗⦘,
        "__newindex" = function⦗⦘: ⦗⦘
}, number, number⦘: ⦗number⦘,
        "tell" = function⦗nil | {
        "__index" = function⦗⦘: ⦗⦘,
        "__newindex" = function⦗⦘: ⦗⦘
}⦘: ⦗number⦘,
        "close" = function⦗nil | {
        "__index" = function⦗⦘: ⦗⦘,
        "__newindex" = function⦗⦘: ⦗⦘
}⦘: ⦗number⦘,
        "eof" = function⦗nil | {
        "__index" = function⦗⦘: ⦗⦘,
        "__newindex" = function⦗⦘: ⦗⦘
}⦘: ⦗number⦘,
        "setcustomattribute" = function⦗string, string⦘: ⦗⦘,
        "getcustomattribute" = function⦗string⦘: ⦗⦘,
        "watch" = function⦗any, any⦘: ⦗⦘,
        "get_files" = function⦗string⦘: ⦗⦘,
        "get_files_recursive" = function⦗string, false | nil | true⦘: ⦗⦘,
        "get_attributes" = function⦗string, false | nil | true⦘: ⦗⦘,
        "get_size" = function⦗string, false | nil | true⦘: ⦗⦘,
        "get_type" = function⦗string⦘: ⦗⦘,
        "copy" = function⦗string, string, false | nil | true⦘: ⦗⦘,
        "link" = function⦗string, string, false | nil | true⦘: ⦗⦘,
        "create_directory" = function⦗string⦘: ⦗⦘,
        "remove_file" = function⦗string⦘: ⦗⦘,
        "remove_directory" = function⦗string⦘: ⦗⦘,
        "set_current_directory" = function⦗string⦘: ⦗⦘,
        "get_current_directory" = function⦗⦘: ⦗⦘
}
function⦗nil | string⦘: ⦗number⦘
]]

for k,v in pairs(fs.get_files(".")) do
    print(k,v)
end